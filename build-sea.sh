#!/bin/bash

set -e

echo "üî® Building SEA (Single Executable Application)..."
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Node.js
NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 20 ]; then
    echo "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Node.js –≤–µ—Ä—Å–∏–∏ 20 –∏–ª–∏ –≤—ã—à–µ"
    echo "   –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $(node -v)"
    exit 1
fi

echo -e "${BLUE}1/6${NC} –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–Ω–¥–ª–∞ —Å rsbuild..."
npm run build

echo -e "${BLUE}2/6${NC} –ì–µ–Ω–µ—Ä–∞—Ü–∏—è blob —Ñ–∞–π–ª–∞..."
node --experimental-sea-config sea-config.json

echo -e "${BLUE}3/6${NC} –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ Node.js binary..."
if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS
    cp $(command -v node) overpass2geojson
    OUTPUT_NAME="overpass2geojson"
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
    # Linux
    cp $(command -v node) overpass2geojson
    OUTPUT_NAME="overpass2geojson"
else
    echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: $OSTYPE"
    exit 1
fi

echo -e "${BLUE}4/6${NC} –£–¥–∞–ª–µ–Ω–∏–µ signature (–µ—Å–ª–∏ –µ—Å—Ç—å)..."
if [[ "$OSTYPE" == "darwin"* ]]; then
    codesign --remove-signature overpass2geojson 2>/dev/null || true
fi

echo -e "${BLUE}5/6${NC} –í–Ω–µ–¥—Ä–µ–Ω–∏–µ blob –≤ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª..."
if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS
    npx postject overpass2geojson NODE_SEA_BLOB sea-prep.blob \
        --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2 \
        --macho-segment-name NODE_SEA
else
    # Linux
    npx postject overpass2geojson NODE_SEA_BLOB sea-prep.blob \
        --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2
fi

echo -e "${BLUE}6/6${NC} –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞..."
if [[ "$OSTYPE" == "darwin"* ]]; then
    codesign --sign - overpass2geojson
fi

echo ""
echo -e "${GREEN}‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo ""
echo "–ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª: ./$OUTPUT_NAME"
echo ""
echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞:"
echo "  ./$OUTPUT_NAME"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
FILE_SIZE=$(du -h "$OUTPUT_NAME" | cut -f1)
echo "–†–∞–∑–º–µ—Ä: $FILE_SIZE"
